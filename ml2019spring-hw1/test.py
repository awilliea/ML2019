import sys
import pandas as pd
import numpy as np

def load_test_data(filename):
    test = pd.read_csv(filename,encoding='big5',header = None)
    test_data = [[] for i in range(18)]
    for r,d in enumerate(test.iloc[:,2:].values):
        test_data[r%18].append(d)
    test_data = np.array(test_data).reshape((18,-1))
    
    return test_data

def get_test_data(data):
    test_x = []
    for i in range(0,data.shape[1],9):
        test_x.append(data[:,i:i+9].reshape(-1))
    test_x = np.array(test_x)
    
    test_x[test_x == 'NR'] = 0
    test_x = test_x.astype(np.float64)
    return test_x

def output_result(filename,predict_value):
    id_ = []
    for i in range(predict_value.shape[0]):
        temp = 'id_'+str(i)
        id_.append(temp)
    output = pd.DataFrame(columns=['id','value'])
    output['id'] = id_
    output['value'] = predict_value
    output.to_csv(filename,index = False)

    
if __name__ == '__main__':
    test_file = sys.argv[1]
    output_file = sys.argv[2]
    
    test_data = load_test_data(test_file)
    test_x = get_test_data(test_data)
    test_x = np.hstack([test_x,np.ones((test_x.shape[0],1))])
    w = np.array([-5.46227603e-03, -1.38475160e-02, -2.69443961e-03, -1.72178991e-02,
       -1.37267864e-03,  1.26807630e-03,  3.49498739e-03, -3.82558612e-03,
        2.45317602e-02,  2.22352553e-02,  3.05717890e-02,  3.89331859e-02,
        2.92968741e-02,  4.59270116e-02,  7.11612298e-02,  6.44754913e-02,
        7.56308685e-02,  1.29809349e-01,  4.78095689e-03, -2.29097397e-02,
        5.51486985e-02, -9.68806233e-02,  1.93669012e-01, -7.50386999e-02,
       -1.57227624e-01,  2.79772280e-01,  7.72973264e-01, -1.51172932e-01,
       -3.14471859e-02, -5.06214364e-03,  7.00874400e-02,  1.73947880e-01,
       -3.70711697e-02, -5.27167268e-02,  1.51031468e-02,  3.08366728e-01,
        3.33776252e-02,  3.02304357e-04,  1.09991200e-01, -2.50667028e-02,
       -4.60466911e-03, -6.41362713e-02,  7.12192054e-02,  7.81103034e-02,
       -1.33377173e-01,  7.95896436e-03, -2.23917625e-02, -2.71589196e-02,
       -2.87100474e-02,  2.64741878e-04, -1.39653775e-03, -6.29413514e-02,
       -4.74672427e-02,  1.62219215e-01,  6.01475146e-03, -1.69156876e-02,
        4.26116769e-03, -2.99950532e-03,  1.43802553e-02, -6.30012851e-03,
       -3.49964929e-02, -2.87755862e-03,  1.16361086e-01,  7.22006764e-03,
        8.43067425e-03, -5.34733925e-03, -2.03541299e-02, -1.50046593e-04,
       -2.41009567e-02, -3.23791607e-02, -6.84718130e-03,  1.01285842e-01,
        1.52591810e-03,  3.25899052e-03, -5.39693281e-03,  1.97644000e-02,
       -1.95997693e-02, -5.14089285e-03,  1.99058472e-02, -1.30003139e-02,
        5.12598068e-02, -2.38137421e-02,  2.27893305e-02,  1.04070443e-01,
       -1.46889478e-01,  2.19447838e-02,  3.44459852e-01, -4.60644331e-01,
        5.66446095e-02,  8.98371339e-01,  2.82931625e-02,  2.38683684e-04,
       -5.57858406e-02, -2.16405533e-03, -4.20852466e-02,  5.39366572e-02,
        6.35790727e-03, -3.32275682e-02, -8.19343521e-02,  3.19074011e-03,
        1.19100933e-02, -2.11667332e-03, -1.39639265e-02, -1.36723707e-02,
       -1.51948713e-03, -1.87024951e-02,  3.78699583e-03,  1.05035778e-02,
       -1.24652316e-01,  2.04311435e-01, -3.24351594e-02, -6.86549358e-02,
       -1.44354563e-02,  3.73961493e-02, -7.32034739e-02,  6.71472526e-02,
        2.09991361e-01,  1.75074253e-02,  1.97364295e-02,  2.76141374e-02,
        1.48967792e-02,  5.91216316e-02,  6.99263143e-02,  5.25539811e-02,
        5.98937370e-02,  1.35010885e-01, -6.48920313e-04,  2.51752532e-03,
       -1.23939758e-03,  1.98101096e-03,  2.33214069e-04,  1.70537463e-03,
       -2.42805120e-03,  1.06900683e-03,  1.75945719e-04, -1.61092202e-03,
       -3.05891324e-04,  1.02912566e-03, -2.17626511e-03,  8.02235798e-04,
        1.68405301e-04, -2.67361169e-04, -2.59778351e-03,  3.97561399e-04,
       -7.17681675e-02, -2.14412479e-02,  2.92491725e-02, -2.24209669e-03,
       -2.06683078e-02, -3.63726895e-02, -7.43710117e-02, -7.83101251e-02,
       -2.94613631e-02, -4.44077036e-02,  5.14938409e-02, -5.47785050e-02,
       -3.81267595e-02,  2.04913613e-02,  1.18038393e-01, -1.98068697e-02,
       -8.89588839e-02,  2.64856900e-02,  3.74417766e-02])
    predict_value = np.dot(test_x,w)
    output_result(output_file,predict_value)